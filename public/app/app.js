angular.module("it",["ngResource","ngRoute","ngSanitize","ngAnimate","ui.select","angular.filter"]),angular.module("it").run(["$rootScope","$location","itIdentitySvc",function(t,e,i){t.$on("$routeChangeError",function(t,i,r,n){"403"===n&&(console.log("403"),e.path("/login"))}),t.$on("$routeChangeStart",function(t,r,n){i.isAuthenticated()||e.path("/login")})}]),angular.module("it").config(["$routeProvider","$locationProvider","$httpProvider",function(t,e,i){var r={admin:{auth:["itAuthSvc",function(t){return t.authorizeCurrentUserForRoute("admin")}]},user:{auth:["itAuthSvc",function(t){return t.routeAsAuthenticatedUser()}]},guest:{auth:["itAuthSvc",function(t){return t.routeAsGuest()}]}};e.html5Mode(!0),t.when("/",{templateUrl:"/partials/dash/view/dashboard",resolve:r.user}).when("/login",{templateUrl:"/partials/auth/view/login",controller:"itLoginCtrl",resolve:r.guest}).when("/admin",{templateUrl:"/partials/admin/view/admin",resolve:r.admin}).when("/apps/home",{templateUrl:"/partials/apps/view/apps",resolve:r.user}).when("/apps/teapot",{templateUrl:"/partials/apps/teapot/view/teapot",controller:"itTeapotCtrl",resolve:r.admin}).when("/it/home",{templateUrl:"/partials/it/view/it",resolve:r.user}).when("/it/inventory",{templateUrl:"/partials/it/inv/view/parts/inventory",controller:"itInvCtrl",resolve:r.user}).when("/it/inventory/parts/:part",{templateUrl:"/partials/it/inv/view/parts/partview",controller:"itInvCtrl",resolve:r.user}).when("/it/inventory/parts/:part/serials",{templateUrl:"/partials/it/inv/view/parts/serials",controller:"itInvCtrl",resolve:r.user}).when("/it/inventory/parts/:part/history",{templateUrl:"/partials/it/inv/view/parts/history",controller:"itInvCtrl",resolve:r.user}).when("/it/inventory/parts/admin",{templateUrl:"/partials/it/inv/view/parts/partadmin",controller:"itInvAdminCtrl",resolve:r.admin}).when("/it/inventory/po",{templateUrl:"/partials/it/inv/view/po/po",controller:"itInvPOCtrl",resolve:r.admin}).when("/it/inventory/po/new",{templateUrl:"/partials/it/inv/view/po/create",controller:"itInvPOCtrl",resolve:r.admin}).when("/it/inventory/po/complete",{templateUrl:"/partials/it/inv/view/po/complete",controller:"itInvPOCtrl",resolve:r.admin}).when("/it/inventory/po/:po",{templateUrl:"/partials/it/inv/view/po/poview",controller:"itInvPOCtrl",resolve:r.admin}).otherwise({redirectTo:"/"})}]),angular.module("it").controller("itMainCtrl",["$scope","$location","$window",function(t,e,i){t.version=i.ver,t.location=e.path(),t.$on("$routeChangeSuccess",function(){t.location=e.path()})}]),angular.module("it").controller("itLoginCtrl",["$scope","$location","itAuthSvc","itIdentitySvc",function(t,e,i,r){t.identity=r,t.signin=function(n,a){if(!n||!a||n.$invalid||a.$invalid)return n&&!n.$invalid||$(loginWidget.username).addClass("invalid"),a&&!a.$invalid||$(loginWidget.password).addClass("invalid"),!1;i.authenticateUser(n,a).then(function(i){if(t.username,t.password=null,i){var n=r.isAuthorized("admin")?"/admin":"/";e.path("/login")&&e.path(n),r.isAuthorized("admin")&&e.path(n)}else $(loginWidget.username).addClass("invalid"),$(loginWidget.password).addClass("invalid")})},t.signout=function(){i.logoutUser().then(function(){t.username="",e.path("/login")})}}]),angular.module("it").controller("itProfileCtrl",["$scope","$location",function(t,e){}]),angular.module("it").factory("itAuthSvc",["$http","$q","$route","itIdentitySvc","itUserResSvc",function(t,e,i,r,n){return{authenticateUser:function(a,o){var l=e.defer();return t.post("/login",{username:a,password:o}).then(function(t){if(t.data.success){var e=new n;angular.extend(e,t.data.user),r.currentUser=e,i.reload(),l.resolve(!0)}else l.resolve(!1);l.resolve(!0)}),l.promise},logoutUser:function(){var n=e.defer();return t.post("/logout",{logout:!0}).then(function(){r.currentUser=void 0,i.reload(),n.resolve()}),n.promise},routeAsAuthenticatedUser:function(){return!!r.isAuthenticated()||e.reject("401")},routeAsGuest:function(){return!r.isAuthenticated()||e.reject("401")},authorizeCurrentUserForRoute:function(t){if("object"==typeof t){var i=!1;return t.forEach(function(t){r.isAuthorized(t)&&(i=!0)}),!!i}return!!r.isAuthorized(t)||e.reject("403")}}}]),angular.module("it").factory("itIdentitySvc",["$window","itUserResSvc",function(t,e){var i;return t.user&&(i=new e,angular.extend(i,t.user)),{currentUser:i,isAuthenticated:function(){return!!this.currentUser},isAuthorized:function(t){return!!this.currentUser&&this.currentUser.roles.indexOf(t)>-1}}}]),angular.module("it").factory("itProfileResSvc",["$resource",function(t){return t("/api/me",{},{update:{method:"POST",isArray:!1}})}]),angular.module("it").factory("itProfileSvc",["itIdentitySvc",function(t){var e={id:t.currentUser._id,full:t.currentUser.viewSettings,it:t.currentUser.viewSettings.it};return{id:e.id,full:e.full,it:e.it,update:function(t){e.id=t._id,e.full=t.viewSettings,e.it=t.viewSettings.it}}}]),angular.module("it").factory("itUserResSvc",["$resource",function(t){var e=t("/api/users",{},{count:{method:"GET",isArray:!1,url:"/api/users/total"},update:{method:"PUT",isArray:!1,url:"/api/users/:id",params:{id:"@id"}},purge:{method:"PURGE",isArray:!1,url:"/api/users/:id",params:{id:"@id"}}});return e.prototype.isAdmin=function(){return this.roles&&this.roles.indexOf("admin")>-1},e}]),angular.module("it").controller("itDashCtrl",["$scope","itDashSvc",function(t,e){t.results=null,t.test=function(){t.results=e.getParts().$$state,console.log(t.results)}}]),angular.module("it").factory("itDashResSvc",["$resource",function(t){return t("/api/test",{})}]),angular.module("it").factory("itDashSvc",["$q","itDashResSvc",function(t,e){return{getParts:function(){var i=e.query(),r=t.defer();return i.$promise.then(function(t){console.log(t),r.resolve(t)},function(t){r.reject(t.data.reason)}),r.promise}}}]),angular.module("it").controller("itTeapotCtrl",["$scope","itInvSvc","itUserResSvc","itInvMetadataSvc",function(t,e,i,r){t.mongo={count:0},t.sql={count:0,cats:[],manufs:[],parts:[],stores:[],supls:[]},t.initParts=function(){e.getParts().then(function(e){t.sql.parts=e})},t.initPartCount=function(){e.getParts().then(function(e){t.sql.count=e.length})},t.initUserCount=function(){i.count().$promise.then(function(e){t.mongo.count=e.data})},t.initCats=function(){r.catModel().then(function(e){console.log(e),t.sql.cats=e})},t.initManufs=function(){r.manufModel().then(function(e){console.log(e),t.sql.manufs=e})},t.initStores=function(){r.storeModel().then(function(e){console.log(e),t.sql.stores=e})},t.initSupls=function(){r.suplModel().then(function(e){console.log(e),t.sql.supls=e})}}]),angular.module("it").controller("itInvAdminCtrl",["$scope",function(t){}]),angular.module("it").controller("itInvCtrl",["$scope","$location","$routeParams","itInvSvc","itInvMetadataSvc","itProfileSvc","itProfileResSvc","dateFilter",function(t,e,i,r,n,a,o,l){t.userView=a.it,t.partPath=i.part,t.partModel=n.partModel,t.partView=function(t){e.path("/it/inventory/parts/"+t)},t.sideBar=!0,t.viewOptions={categories:[],limits:[10,30,50,100],manufacturers:[],stores:[],suppliers:[]},t.inventory={parts:[],partChange:[],partCount:0,partEdit:!1,partFocus:[],partLoaded:!1},t.testDate=l(Date.now().toString(),"MM/dd/yyyy"),t.getCats=function(){n.catModel().then(function(e){t.viewOptions.categories=e})},t.getManufacturers=function(){n.manufModel().then(function(e){t.viewOptions.manufacturers=e})},t.getParts=function(){r.getParts().then(function(e){t.inventory.parts=e.data,t.inventory.partCount=e.length})},t.getStores=function(){n.storeModel().then(function(e){t.viewOptions.stores=e})},t.getSuppliers=function(){n.suplModel().then(function(e){t.viewOptions.suppliers=e})},t.getPart=function(e){t.inventory.partLoaded=!1,r.getPart(e).then(function(e){t.inventory.partFocus=e.data[0],t.inventory.partLoaded=!0,t.inventory.partChange=angular.copy(e.data[0]),["CAT_INDEX","CAT_NAME","LOC_INDEX","LOC_NAME","MAN_INDEX","MAN_NAME","SUPL_INDEX","SUPL_NAME","PART_FRIENDLY"].forEach(function(e){delete t.inventory.partChange[e]})})},t.toggleEdit=function(e){t.inventory.partEdit&&!e?t.updatePart():e&&t.getPart(t.inventory.partFocus.PART_NUM),t.inventory.partEdit=!t.inventory.partEdit},t.updatePart=function(){r.updatePart(t.inventory.partChange).then(function(){t.getPart(t.inventory.partFocus.PART_NUM)})},t.$watch("userView",function(e,i,r){if(e!==i){var n={_id:a.id,viewSettings:a.full};n.viewSettings.it=e,e.invCat!==i.invCat&&(n.viewSettings.it.invPage=1),e.invSearch!==i.invSearch&&(n.viewSettings.it.invPage=1),e.invLimit!==i.invLimit&&t.inventory.partCount/e.invLimit<e.invPage&&(n.viewSettings.it.invPage=1),o.update(n).$promise.then(function(e){a.update(n),t.getParts()})}},!0)}]),angular.module("it").controller("itInvPOCtrl",["$scope","itInvSvc","itInvMetadataSvc","itProfileSvc","itProfileResSvc",function(t,e,i,r,n){t.userView=r.it,t.poModel=i.poModel,t.viewOptions={limits:[10,30,50,100]},t.pos={pos:[],poChange:[],poCount:0,poEdit:!1,poFocus:[],poLoaded:!1},t.getPOs=function(){e.getPOs().then(function(e){t.pos.pos=e.data,t.pos.poCount=e.length})},t.$watch("userView",function(e,i,a){if(e!==i){var o={_id:r.id,viewSettings:r.full};o.viewSettings.it=e,e.poSearch!==i.poSearch&&(o.viewSettings.it.poPage=1),e.poLimit!==i.poLimit&&t.pos.poCount/e.poLimit<e.poPage&&(o.viewSettings.it.poPage=1),n.update(o).$promise.then(function(e){r.update(o),t.getPOs()})}},!0)}]),angular.module("it").directive("datepicker",function(){return{restrict:"A",require:"ngModel",link:function(t,e,i,r){e.datepicker({dateFormat:"mm/dd/yy",onSelect:function(e){t.date=e,t.$apply()},showAnim:"blind",defaultDate:Date.now()})}}}),angular.module("it").filter("postatus",function(){return function(t){var e="";switch(t){case 0:e="New";break;case 1:e="In Review";break;case 2:e="Approved";break;case 3:e="Declined";break;case 4:e="In Progress";break;case 5:e="Complete"}return e}}),angular.module("it").filter("serialization",function(){return function(t){var e="";switch(t){case 2:e="Advanced";break;case 1:e="Simple";break;case 0:default:e="None"}return e}}),angular.module("it").factory("itInvMetadataSvc",["$q","itIdentitySvc","itInvResSvc",function(t,e,i){return{partModel:{partName:{bindName:"PART_NAME",fieldDisp:"Part Name",fieldPlace:"Part Name",fieldDesc:"Enter a name to identify this part.",fieldFilt:/[a-zA-Z0-9 :,.\-_\/]{8,50}$/g,fieldLimit:50},partDesc:{bindName:"PART_DESC",fieldDisp:"Description",fieldPlace:"Description",fieldDesc:"Enter a short phrase to describe this part.",fieldFilt:/[a-zA-Z0-9 :,.\-_\/]{1,250}$/g,fieldLimit:250},partNum:{bindName:"PART_NUM",fieldDisp:"Part Number",fieldPlace:"UPC Number",fieldDesc:"Scan or enter the part UPC.",fieldFilt:/[a-zA-Z0-9 \-]{8,15}$/g,fieldLimit:15},partCost:{bindName:"PART_COST",fieldDisp:"Cost",fieldPlace:"Cost",fieldDesc:"Enter the standard cost of this item.",fieldFilt:/[0-9.]{5,9}$/g,fieldLimit:9},partStore:{bindName:"PART_STORE",fieldDisp:"Storage Location",fieldPlace:0,fieldDesc:"Select where this part is stored.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4},partStock:{bindName:"PART_STOCK",fieldDisp:"Stock",fieldPlace:"Stock",fieldDesc:"Enter the initial quantity for this part.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4},partCat:{bindName:"PART_CAT",fieldDisp:"Category",fieldPlace:e.isAuthorized("invmnt")?4:1,fieldDesc:"Select the category for this part.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4},partNotes:{bindName:"PART_NOTES",fieldDisp:"Notes",fieldPlace:"Notes",fieldDesc:"Enter any additional notes for this part.",fieldFilt:/[a-zA-Z0-9 :,.\-_\/]{0,250}$/g,fieldLimit:250},partSupl:{bindName:"PART_SUPL",fieldDisp:"Supplier",fieldPlace:0,fieldDesc:"Select the default supplier for this part.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4},partSuplUrl:{bindName:"PART_SUPLURL",fieldDisp:"Supplier Link",fieldPlace:"Supplier Link",fieldDesc:"Enter the supplier URL link for this part.",fieldFilt:/[a-zA-Z0-9 :,.\-_\/]{0,250}$/g,fieldLimit:250},partSerial:{bindName:"PART_SERIAL",fieldDisp:"Serialization",fieldPlace:0,fieldDesc:"Select the serialization type for this part.",fieldFilt:/[0-9]{1}$/g,fieldLimit:1},partManuf:{bindName:"PART_MANUF",fieldDisp:"Manufacturer",fieldPlace:0,fieldDesc:"Select or enter the manufacturer for this part.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4},spartStock:{bindName:"SPART_STOCK",fieldDisp:"Stock",fieldPlace:"Stock",fieldDesc:"Enter the initial quantity for this part.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4}},poModel:{poNum:{bindName:"PO_NUM",fieldDisp:"PO Number",fieldPlace:"PO Number",fieldDesc:"PO number is automatically generated.",fieldFilt:/[A-Z]{1}[0-9]{6,9}/g,fieldLimit:10},poOdate:{bindName:"PO_ODATE",fieldDisp:"Order Date",fieldPlace:"Order Date",fieldDesc:"Select the date when the order was placed.",fieldFilt:/(0[1-9]|1[012])[- \/.](0[1-9]|[12][0-9]|3[01])[- \/.](19|20)\d\d/g,fieldLimit:10},poCdate:{bindName:"PO_CDATE",fieldDisp:"Completion Date",fieldPlace:"Completion Date",fieldDesc:"Select the date when the order was received.",fieldFilt:/(0[1-9]|1[012])[- \/.](0[1-9]|[12][0-9]|3[01])[- \/.](19|20)\d\d/g,fieldLimit:10},poCost:{bindName:"PO_COST",fieldDisp:"Cost",fieldPlace:"Cost",fieldDesc:"Enter the total cost for this order.",fieldFilt:/[0-9.]{5,9}$/g,fieldLimit:9},poTax:{bindName:"PO_TAX",fieldDisp:"Tax Cost",fieldPlace:"Cost",fieldDesc:"Enter the tax charged for this order.",fieldFilt:/[0-9.]{5,9}$/g,fieldLimit:9},poShip:{bindName:"PO_SHIP",fieldDisp:"Shipping Cost",fieldPlace:"Cost",fieldDesc:"Enter the shipping charged for this item.",fieldFilt:/[0-9.]{5,9}$/g,fieldLimit:9},poVendor:{bindName:"PO_VENDOR",fieldDisp:"Supplier",fieldPlace:0,fieldDesc:"Select the supplier for this order.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4},poStatus:{bindName:"PO_STATUS",fieldDisp:"Status",fieldPlace:0,fieldDesc:"Select the status of this order.",fieldFilt:/[0-9]{1}$/g,fieldLimit:1},poIcount:{bindName:"PO_ICOUNT",fieldDisp:"Item Count",fieldPlace:"Item Count",fieldDesc:"Enter the quantity of items in this order.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4},poiInum:{bindName:"POI_INUM",fieldDisp:"Part Name",fieldPlace:"Part Name",fieldDesc:"Select an existing part or create a new one.",fieldFilt:/[a-zA-Z0-9 :,.\-_\/]{8,50}$/g,fieldLimit:50},poiCount:{bindName:"POI_COUNT",fieldDisp:"Quantity",fieldPlace:"Quantity",fieldDesc:"Enter the quantity of this part in this order.",fieldFilt:/[0-9]{1,4}$/g,fieldLimit:4},poiPerCost:{bindName:"POI_PERCOST",fieldDisp:"Single Cost",fieldPlace:"Cost",fieldDesc:"Enter the cost of this item for this order.",fieldFilt:/[0-9.]{5,9}$/g,fieldLimit:9}},catModel:function(){var e=i.getCategories(),r=t.defer();return e.$promise.then(function(t){r.resolve(t)},function(t){r.reject(t.data.reason)}),r.promise},manufModel:function(){var e=i.getManufacturers(),r=t.defer();return e.$promise.then(function(t){r.resolve(t)},function(t){r.reject(t.data.reason)}),r.promise},storeModel:function(){var e=i.getStores(),r=t.defer();return e.$promise.then(function(t){r.resolve(t)},function(t){r.reject(t.data.reason)}),r.promise},suplModel:function(){var e=i.getSuppliers(),r=t.defer();return e.$promise.then(function(t){r.resolve(t)},function(t){r.reject(t.data.reason)}),r.promise}}}]),angular.module("it").factory("itInvResSvc",["$resource","itProfileSvc",function(t,e){function i(){return e.it.invLimit}function r(){return e.it.invPage}var n="/api/inv";return t(n,{},{getParts:{method:"GET",isArray:!1,url:"/api/inv/parts",params:{limit:i,page:r,cat:function(){return e.it.invCat},search:function(){return e.it.invSearch}}},getPart:{method:"GET",isArray:!1,url:"/api/inv/parts/:partNum"},getPOs:{method:"GET",isArray:!1,url:"/api/inv/po",params:{limit:i,page:r,search:function(){return e.it.poSearch}}},getPO:{method:"GET",isArray:!1,url:"/api/inv/po/:poNum"},getCategories:{method:"GET",isArray:!0,url:"/api/inv/categories"},getManufacturers:{method:"GET",isArray:!0,url:"/api/inv/manufacturers"},getStores:{method:"GET",isArray:!0,url:"/api/inv/stores"},getSuppliers:{method:"GET",isArray:!0,url:"/api/inv/suppliers"},updatePart:{method:"PUT",isArray:!1,url:"/api/inv/parts"}})}]),angular.module("it").factory("itInvSvc",["$q","itInvResSvc",function(t,e){function i(t,e){t.$promise.then(function(t){console.log(t),e.resolve(t)},function(t){e.reject(t.data.reason)})}return{getPart:function(r){var n=t.defer();return i(e.getPart({partNum:r}),n),n.promise},getParts:function(){var r=t.defer();return i(e.getParts(),r),r.promise},getPO:function(r){var n=t.defer();return i(e.getPO({poNum:r}),n),n.promise},getPOs:function(){var r=t.defer();return i(e.getPOs(),r),r.promise},updatePart:function(r){var n=t.defer();return i(e.updatePart({payload:r}),n),n.promise}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
